/*
fun main() {
   
    //println("o println serve para exibir textos no console")
    /*
     * para 
     * fazer
     * comentários de 
     * mais
     * de 
     * uma
     * linha
     */
    
    
}
*/
//--------------------------------------------------------------------------------------------------------------------------------------

/*
fun main() {
    //exercício: fazer um diálogo de minimo 10 linhas usando a declaração println()
    
    println("Rogers_ já viu a teoria dos números 3 6 9 ?")
    println("<Rogers> A teoria se surge através de que, quase tudo nesse mundo é resumido aos números 3,6,9 ")
    println("<???> Mas como assim? ")
    println("<Rogers> É assim. O ano tem 12 meses, resumindo você consegue dividir esses 12 por 6 ou por 3")
    println("<???> Mas não faz sentido Rogers")
    println("<Rogers> Calma rapaz, vou te fazer pensar agora")
    println("<Rogers> A água é formado por três átomos, que são: 2 hidrogênio e 1 oxigênio. Ou seja são três átomos que formam a água")
    println("<???> Oxi??")
    println("<Rogers> Uma gestação de uma mulher dura em torno de 9 meses. Conhecidência ou não")
    println("<Rogers> Tudo tem começo, meio e fim. 3 também ")
    println("<Rogers> O dia tem 24 horas, que são possíveis dividir pelos números 3 e 6")
    println("<Rogers> Bom eu acho que isso não é conhecidência, não é ")
    println("<???> Ai você tem um ponto, e é um belo ponto")
	
    //Variáveis - armazenam valores, dados, informações
    
    //val - não mutável - não podemos alterar seu valor
    //var - mutável - podemos alterar seu valor
    //
    //Tipos de variáveis: desafio p/ casa - NÃO É OBRIGATÓRIO!!!(OPCIONAL)
    //
    //String - 
    //Int -
    //Float -
    //Double - 
    //Long -
    //Boolean - 
    
}
*/
//-------------------------------------------------------------------------------------------------------------------------------------------------
/*
fun main() {
   //Tipos de variáveis: 
    //
    //String - armazena valores de tipo texto - dentro de ""  ==> ex: "abóbora" 
    //Int - armazena números inteiros ==> 7042
    //Float - armazena números reais (no geral) - necessita de um f no valor ==>72.24f
    //Double - armazena números quebrados(de forma arredondada) ==> 7.15
    //Long - armazena números longos ==> 54564386546546.784486
    //Boolean - verdadeiro ou falso ==> true, false
    /*
    var cr7 = "Cristiano Ronaldo" 
    var numeroChampions = 5 
    var altura = 1.87
    
    //Concatenação
    
    print("O nome dele é " + cr7 + ", ele tem " + numeroChampions)
    println(" titúlos de Champions League e ele tem " + altura + " de altura SIIIIUU eu sou u miliorr")
    
    var laPulga = "Lionel Messi"
    var champions = 4
    var alturaDele = 1.02
    
    print("O nome dele é $laPulga, ele tem $champions títulos de chamions, ")
    println("e ele tem apenas $alturaDele de altura")
    */
    //Faça uma apresentação de si mesmo, usando no mínimo 
    //5 variáveis e usando o método de concatenação
    /*
    val nome = "José"
    val sobrenome = "Nestor"
    val dia = 5 
    val mes = "junho"
    val ano = "1575 a.C." 
    
    println("Olá, meu jovem, meu nome é $nome  $sobrenome e eu nasci no dia $dia de $mes de $ano")
    */
    
    //Operadores matemáticos
    //
    // + => adição
    // - => subtração
    // / => divisão
    // * => multiplicação
    // % => módulo - o resto de uma divisão
    
    //println(15 % 2) 
    //
    //Operadores Relacionais 
    //
    //
    // == => igual a...
    // != => diferente de...
    // > => maior que... 
    // < => menor que...
    // >= -> maior ou igual a...
    // <= -> menor ou igual a...
    
    
    
    
    
}

*/
//------------------------------------------------------------------------------------------------------------

//Desafio Calculadora: fazer um programa que simule uma calculadora
    //Deve ter pelo menos 2 variáveis de tipo Int e pelo menos 4 println's
    //cada um obtendo um calculo diferente(adiçao, subtração, multiplicação
    //e divisão) que relacionam as duas variáveis neste cálculo  :)
    //
    //Com interface BONITA!!
    //
    //o primeiro que conseguir... chocolate
    //
    //iremos corrigir
    //
    var n1 = 2
    var n2 = 4
    
    println("☺ ******************---------******************☺")
    println("**                                            **")
    println("**                                            **")
    println("**             Minha Calculadora!!            **")
    println("**                                            **")
    println("** Adição entre $n1 e $n2                         **")
    println("** O resultado da adição é: " + (n1 + n2))
    println("**                                            **")
    println("** Subtração entre $n1 e $n2                      **")
    println("** O resultado da subtração é: " + (n1 - n2))
    println("**                                            **")
    println("** Multipliocação entre $n1 e $n2                 **")
    println("** O resultado da multiplicação é: " + (n1 * n2))
    println("**                                            **")
    println("** Divisão entre $n1 e $n2                        **")
    println("** O resultado da divisão é: " + (n1 / n2))
    println("**                                            **")
    println("**                                            **")
    println("**••••••••••••••••••••••••••••••••••••••••••••**")

//----------------------------------------------------------------------------------------------------------------

fun main() {
    
    //Condições
    //
    //condição simples
    //
    // if --> se... 
    // else --> senão... 
    /*
    var lembreiDoChocolate = "mdflkjbrlkmnblkl"
    
    if(lembreiDoChocolate == "Sim"){
        println("Vou entregar o chocolate para você")
    }else{
        println("Chocolate pra todo mundo!!")
    }
    */
    //se a condição for verdadeira, a sua ação será executada, senão, outra ação será
    //executada
    //
    // Exercício  --->  Faça uma comparação, usando uma variável e o if...else, se essa 
    // comparação for verdadeira, um resultado deverá ser impresso, senão, outro(resultado)
    //  será impresso
    //  
    //Condições compostas
    /*
    var coracoes = 50
    
    if(coracoes >= 5){
        println("Você está ótimo!! Bom pra vc ☺")
    }else if(coracoes == 4){
        println("Ce ta bem ♣")
    }else if(coracoes == 3){
        println("Ce ta ok, pode cumer miojo")
    }else if(coracoes == 2){
        println("vc não está muito bem!! se cuida! culpa do miojo")
    }else if(coracoes == 1){
        println("Voce está morrendo, você tem direito a um advogado e a uma ligação")
    }else{
        println("Tu ta morto :), novo reforço do Vascao")
    }
    */
    var idade = -1
    
    if(idade > 0){
        println("Você é um nenê")
    }else if(idade <= 12){
        println("Você é muito infantil!!")
    }else if(idade <= 18){
        println("Tu é jovem! aproveite sua vida")
    }else if(idade <= 60){
        println("Tu é adulto!! Pague a conta!")
    }else if(idade > 60){
        println("Que que há velhinho?")
    }else{
        println("Você não existe!!!")
    }
    
    
    
    
    
    
    
    
    
}
//------------------------------------------------------------------------------------------------

fun main() {
    
    //Operadores Lógicos
    //
    //são usados quando queremos comparar mais de uma coisa na mesma condição
    //
    // && -> e (shift + 7)
    // || -> ou (shift + barra invertida)
    // 
    // TABELA VERDADE (com E e OU)
    // 
    // && - a determinada ação só acontecerá se e somente se todas as
    //  condições forem verdadeiras
    // 
    // VV -> verdadeiro
    // VF -> falso
    // FV -> falso
    // FF -> falso
    // 
    // || - a determinada ação será executada se pelo menos uma das 
    // condições forem verdadeiras
    // 
    // VV -> verdadeiro
    // VF -> verdadeiro
    // FV -> verdadeiro
    // FF -> falso
    // 
    // 
    // Show do Péricles
    /*
    var idade = 13
    var acompanhadoDosPais = false
    
    
    if(idade >= 14 || acompanhadoDosPais == true){
        println("Pode entrar, curte o Péricles ae")
    }else{
        println("a entrada não permitida para você")
    }
    */
    //Exercício - A seleção Brasileira está correndo risco de ser eliminada na fase de grupos 
    //da Copa, o Brasil, só pode se classificar se a Alemanha perder, e se o próprio Brasil
    // ganhar. As partidas já passaram, quero saber se o Brasil se classificou ou não
    // 
    //  detalhe: use os operadores lógicos
    
    
    
    
}
//-----------------------------------------------------------------------------------------------------------

fun main() {
    
    //Exercício - A seleção Brasileira está correndo risco de ser eliminada na fase de grupos 
    //da Copa, o Brasil, só pode se classificar se a Alemanha perder, e se o próprio Brasil
    // ganhar e se o Marrocos perder. As partidas já passaram, quero saber se o Brasil se classificou ou não
    // 
    //  detalhe: use os operadores lógicos
    
    /*
    val brasil = true
    val alemanha = false
    val marrocos = false
    
    if(!alemanha && brasil && !marrocos){
        println("Pode isso Arnaldo, Brasil classificado!!! Rumo ao hexa! Haja Coração")
    }else{
        println("Acaboooou, eu só queria dar alegria pro meu povo")
    }
    */
    
    // When - Quando
    // 
    // Quando uma determinada condição for verdadeira, outra determinada
    // ação será executada
    // 
    // Estrutura do When:
    // 
    // When(var){
    // valor -> ação a ser executada
    // outroValor -> ação
    // maisUm -> ação
    // outro -> ação
    // else -> ação
    // }
    // 
    var mes = 2
    
    when(mes){
        1 -> println("Acapulco - MEX")
        2 -> println("Paris - FRA")
        3 -> println("Berlim - ALE")
        4 -> println("Monaco - MON")
        5 -> println("Pequim - CHI")
        6 -> println("Acre - BRA")
        7 -> println("Roma - ITA")
        8 -> println("Atenas - GRE")
        9 -> println("Madrid - ESP")
        10 -> println("Manchester - ING")
        11 -> println("Dubai - EAU")
        else -> println("São Paulo - BRA")
    }
    
    
}
//***********************************************************************************************

fun main() {
    
    // Laços de Repetição
    // 
    // while - enquanto
    // for - para..
    // do..while faça.. enquanto
    // repeat - repita
    
    // Laço While ☺
    // enquanto uma determinada condição for verdadeira, outra determinada
    // ação será executada
    // 
    //Estrutura do While 
    //
    // while(condição){
    // ação
    // }
    /*
    var number = 0
    
    while(number < 10){
        println(number)
        number++
    }
    */
    
    // Laço do.. While
    // 
    // Uma determinada ação será executada, enquanto outra determinada condição for
    // verdadeira
    // 
    // Estrutura do do..While
    // 
    // do{
    // ação
    // } while(condição)
    
    var number = 0
    
    do{
        println(number)
        number++
    }while(number > 10)
    
    //Exercício -> O ano não é bissexto, portanto o ano possui 365 dias, precisa ser exibido no 
    //console, os números de 1 a 365, usando no mínimo uma variável, usando os Laços While e 
    //do..while
    
    //Divirta-se
}
    
    //------------------------------------------------------------------------------------------
    fun main() {
    
    //Laços de repetição
    //While ♣
    //Do..While ♠
    //
    // for - para... 
    // 
    // for - para cada item em uma lista/ ou qualquer tipo de coleção, será executado uma
    // determinada ação  
    // 
    // Estrutura do for: 
    // for (item in list/collection/intervalo){
    // ação
    // } 
    // 
    /*
    var lista = mutableListOf<String>("Messi", "Cristiano", "Neymar")
    for(item in lista){
        println(item)
    }
    */
    /*
    for(item in 0..10){
        println(item * 8)
    }
    */
    //Exercício: faça a tabuada de um número de sua escolha (sem a do 0, a do 1, do 2 e do 10)
    //. observação: precisa utilizar o laço for
    //
    // Repeat - Repita...
    //
    // uma determinada ação será repetida um determinado número de vezes
    // 
    var tartaruga = 1
    repeat(10){
        println(tartaruga)
        tartaruga++
    } 
    
    
}

//***************************************************************************************
fun main() {
    
    //Collections - Coleções 
    //
    // <> --> tags - servem para especificar o tipo de valor a ser listado
    //
    // São determinados conjuntos de itens/valores que podem ser modelados e utilizados
    // em determinados métodos e operações 
    // 
    // List - listas
    // 
    // listOf --> listam itens de variados tipos 
    // 
    
    //var genericList = mutableListOf("São Paulo, arroz e pamonha", 25.7f, 23.974, '$', false) 
    //println(genericList)
    var specificList = listOf<String>("Cruzeiro do Roberto Carlos", "Calleri","5")
    println(specificList)
    
    
// Index - uma posição da collection
 
    //Propriedades - list 
    //
    // .lastIndex 
    // .size 
    // 
    // 
    //println(specificList.lastIndex)
    //println(specificList.first())
   //println(genericList.size) 
   //
   //println(specificList.get(0))
   // println(specificList.indexOf("Cruzeiro do Roberto Carlos"))
    
    
    //Métodos - listOf
    /*
    genericList.add(2, "easy")
    println(genericList)
    genericList.remove(23.974)
    println(genericList) 
    genericList.removeAt(3)
    println(genericList)
    genericList.set(0, "tartaruga")
    println(genericList)
    genericList.clear()
    println(genericList)
    */
    var anotherList = setOf("Pedro", "Diniz", "Pelé", "Ronaldinho", "Marília Mendonza", "Diniz")
    println(anotherList) 
    
    var animal = mutableMapOf("tartaruga" to 0, "jabuti" to 1, "Tucano" to 2, "Hiena" to 3, "Mamaco" to 4)
    println(animal)
    
    
    
    
    
}
//---------------------------------------------------------------------
fun main() {
    //Métodos - listOf
    /*
    genericList.add(2, "easy")
    println(genericList)
    genericList.remove(23.974)
    println(genericList) 
    genericList.removeAt(3)
    println(genericList)
    genericList.set(0, "tartaruga")
    println(genericList)
    genericList.clear()
    println(genericList)
    */
    //var anotherList = setOf("Pedro", "Diniz", "Pelé", "Ronaldinho", "Marília Mendonza", "Diniz")
    //println(anotherList) 
    /*
    var animal = mutableMapOf("tartaruga" to 0, "jabuti" to 1, "Tucano" to 2, "Hiena" to 3, "Mamaco" to 4)
    println(animal) 
    
    animal.put("capivara incrível ☺", 5)
    println(animal) 
    animal.put("leopardo", 9)
    println(animal) 
    animal.replace("Hiena","tatu ",3)
    println(animal)
    */ 
    
    //POO 
    //
    // Programação Orientada a Objetos 
    // 
    // Objetos - estados (características: nome, idade, cpf)
    // 
    // Comportamentos - (andar, comer, dormir, conversar, programar) 
    // 
    // Classes - Modelos que servem para construção de objetos derivados 
    // 
    val pessoa1 = Pessoa()
    pessoa1.nome = "Keyla"
    println(pessoa1.nome)
    pessoa1.cpf = "445.177.465.78"
    println(pessoa1.cpf)
}
 
 class Pessoa(){
     //declaração de atributos para a classe Pessoa
     var nome = ""
     var cpf = ""
     var idade = 99 
     var altura = 1.74 
     
     
 }
// Exercício - Faça uma ficha médica, apontando os resultados do último checkup de um paciente
// .Permitido usar a mesma classe Pessoa()
//--------------------------------------------------------------------- 
fun main() {
    
 // Exercício - Faça uma ficha médica, apontando os resultados do último checkup de um paciente
// .Permitido usar a mesma classe Pessoa() 
// <3 - Monitora - Pratiquem esportes crianças (skate é um bom inicio :)! e escutem GORILLAZ!
//  
/*
	var paciente007 = Paciente() 
    paciente007.nome = "James Bond" 
    paciente007.idade = 12 
    paciente007.altura = 1.70 
    paciente007.alergia = "Manteiga de Amendoim" 
    paciente007.tipoSanguinio = "O+" 
    paciente007.medicamento = "dipirona" 
    paciente007.peso = 70.0 
    paciente007.dependenteQuimico = true  
    
    println("*******Ficha Médica ☺ *******")
    println("")
    println("Nome: " + paciente007.nome)
    println("Idade: "+ paciente007.idade)
    println("Altura: "+ paciente007.altura)
    println("Peso: "+paciente007.peso)
    println("Alergia: "+paciente007.alergia)
    println("Tipo Sanguíneo: "+paciente007.tipoSanguinio)
    println("Dependente Químico? "+paciente007.dependenteQuimico)
    println("Medicamnto: "+paciente007.medicamento)
    println("")
    println("***Até o próximo checkup! ♥***")
    
    
    */
    
} 

class Paciente(){
    var nome = ""
    var idade= 0
    var altura= 0.0
    var alergia= "String" 
    var tipoSanguinio= "String" 
    var medicamento= "String "
    var peso= 0.0 
    var dependenteQuimico= true
    
    
}

///****************************************************************************
fun main() {
    
    var jogador1 = JogadorDeFutebol("Neymar JR", "PSG", 10, "Brasil", "Puma", "Meia-Atacante", 222.0)
    
    println(jogador1.nome)  
    
    //Exercício - Faça a escalação do seu time exibindo nome, numero da camisa e posição
    //no mínimo 11 jogadores
    //permitido inventar jogadores
    // Monitora- oii, Boa sorte!! :) ♥
    
}
class JogadorDeFutebol(var nome: String,
                      var time: String,
                      var numeroDaCamisa: Int,
                      var nacionalidade: String,
                      var patrocinio: String,
                      var posicao: String,
                      var preco: Double){
    
    
}
//*******************************************************************************

fun main() {
    
    
    /*
    var jogador1 = JogadorDeFutebol("Thibaut Courtois", 1, "Guarda-Redes")
    var jogador2 = JogadorDeFutebol("João Cancelo", 2, "Lateral-Direito")
    var jogador3 = JogadorDeFutebol("Virgil Van Dijk", 3, "Zagueiro")
    var jogador4 = JogadorDeFutebol("Marquinhos", 4, "Zagueiro")
    var jogador5 = JogadorDeFutebol("Theo Hernández", 6, "Lateral-Esquerdo")
    var jogador6 = JogadorDeFutebol("Casemiro", 5, "Volante")
    var jogador7 = JogadorDeFutebol("Bruno Guimarães", 8, "Meio-Campo")
    var jogador8 = JogadorDeFutebol("Neymar Jr", 10, "Meia-Armador")
    var jogador9 = JogadorDeFutebol("Lionel Messi", 30, "Ponta-Direita")
    var jogador10 = JogadorDeFutebol("Vini Jr", 7, "Ponta-Esquerda")
    var jogador11 = JogadorDeFutebol("Earling Haaland", 9, "Centroavante")
    
    println(jogador1.nome + " - "+ jogador1.numeroDaCamisa+" - "+ jogador1.posicao)
    println(jogador2.nome + " - "+ jogador2.numeroDaCamisa+" - "+ jogador2.posicao)
    println(jogador3.nome + " - "+ jogador3.numeroDaCamisa+" - "+ jogador3.posicao)
    println(jogador4.nome + " - "+ jogador4.numeroDaCamisa+" - "+ jogador4.posicao)
    println(jogador5.nome + " - "+ jogador5.numeroDaCamisa+" - "+ jogador5.posicao)
    println(jogador6.nome + " - "+ jogador6.numeroDaCamisa+" - "+ jogador6.posicao)
    println(jogador7.nome + " - "+ jogador7.numeroDaCamisa+" - "+ jogador7.posicao)
    println(jogador8.nome + " - "+ jogador8.numeroDaCamisa+" - "+ jogador8.posicao)
    println(jogador9.nome + " - "+ jogador9.numeroDaCamisa+" - "+ jogador9.posicao)
    println(jogador10.nome + " - "+ jogador10.numeroDaCamisa+" - "+ jogador10.posicao)
    println(jogador11.nome + " - "+ jogador11.numeroDaCamisa+" - "+ jogador11.posicao)
    
    
    //Exercício - Faça a escalação do seu time exibindo nome, numero da camisa e posição
    //no mínimo 11 jogadores
    //permitido inventar jogadores
    // Monitora- oii, Boa sorte!! :) ♥
    // */
    
    
    //Métodos/funções - são um grupo de ações que representam uma determinada atividade de um
    //determinado objeto 
    //
    // Estrutura de um método no Kotlin 
    // 
    // 
    // 
    // fun nomeDela (parametros - se tiver){
    // ações
    // } 
    // 
    // 
    // var nomeDoObjeto = ClasseDele() 
    // 
    // nomeDoObjeto.nomeDela(parâmetros)  
    
    
    
}
class JogadorDeFutebol(var nome: String,
                      var numeroDaCamisa: Int,
                      var posicao: String){
}
    
    //**********************************************************************
    fun main() {
    
    //Métodos/funções - são um grupo de ações que representam uma determinada atividade de um
    //determinado objeto 
    //
    // Estrutura de um método no Kotlin 
    // 
    // 
    // 
    // fun nomeDela (parametros - se tiver){
    // ações
    // } 
    // 
    // 
    // var nomeDoObjeto = ClasseDele() 
    // 
    // nomeDoObjeto.nomeDela(parâmetros)  
    // 
    
    val contaCorrente = ContaBanco(174253789400012, 0.5, "Rogers") 
    contaCorrente.consultarSaldo()
    contaCorrente.saque(0.3, 2984)
    
    
}


class ContaBanco(val num: Long, var saldo: Double, var dono: String){
    
    
    //Consultar Saldo, Saque e Deposito
    //
    // Monitora - Oiiii <3 
    //
    fun consultarSaldo(){
        println("O saldo da sua conta é R$$saldo")
    } 
    
    fun saque(valor: Double, senha: Int){
        
        if(senha == 2984){
            if(saldo >= valor){
                saldo -= valor // vai subtrair o Valor do Saldo
                println("Saque de R$$valor realizado com sucesso ☺")
            }else if(valor <= 0){
                println("Impossível sacar R$$valor") 
            }else{
                println("Saldo Insuficiente, saque de R$$valor não realizado")
            }
        }else{
            println("Senha Incorreta! Tente novamente")
        }
        
        
    }
    
    
    
}
    
    
    
 //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////   
    
fun main() {
    
    //Métodos/funções - são um grupo de ações que representam uma determinada atividade de um
    //determinado objeto 
    //
    // Estrutura de um método no Kotlin 
    // 
    // 
    // 
    // fun nomeDela (parametros - se tiver){
    // ações
    // } 
    // 
    // 
    // var nomeDoObjeto = ClasseDele() 
    // 
    // nomeDoObjeto.nomeDela(parâmetros)  
    // 
    
    val contaCorrente = ContaBanco(174253789400012, 5.000, "Rogers") 
    contaCorrente.consultarDeposito()
    contaCorrente.deposito(1.800, 2984)
    
    
}


class ContaBanco(val num: Long, var deposito: Double, var dono: String){
    
    
    //Consultar Saldo, Saque e Deposito
    //
    // Monitora - Oiiii <3 
    //
    fun consultarDeposito(){
        println("O deposito da sua foi de  R$$1.800")
    } 
    
    fun deposito(deposito: Double, senha: Int){
        
        if(senha == 2984){
            
                println("deposito de R$$1.800 realizado com sucesso ☺")
            }else if(deposito >= 1){
                println("Impossível sacar R$$10.00") 
          
        }}}





    fun Saldo(){
        println("O saldo da sua conta é R$$saldo")
    } 
    
    fun saldo(saldo: Double, senha: Int){
        
        
            if(saldo >= ){
                saldo +=  // vai subtrair o Valor do Saldo
                println("Saldo e de R$$6.800 ☺")
            }else if(saldo >= 0){
                println("Impossível sacar R$$7.000") 
        
        }
        
        
    }
    
    
    
}
    
    
    
    
    
